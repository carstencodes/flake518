name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy wheel to pypi
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine pdm
        pdm install -G:all
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pdm build
        twine upload dist/*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ deploy ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag name
        uses: battila7/get-version-action@v2
        id: tag_name
      - name: Generate changelog
        id: changelog
        run: |
          chl_file=".changelogs/${{steps.tag_name.outputs.version}}.md"
          if [ -f "${chl_file}" ]
          then
            message=$(cat "${chl_file}")
            message="${message//'%'/'%25'}"
            message="${message//$'\n'/'%0A'}"
            message="${message//$'\r'/'%0D'}"
          else
            changelog="No changelog provided"
          fi

          echo ::set-output name=changelog::${changelog}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          changelog: ${{ needs.changelog.outputs.changelog }}
          branch: ${{ steps.tag_name.outputs.version }}
        with:
          tag_name: ${{ steps.tag_name.outputs.version }}
          release_name: Release ${{ steps.tag_name.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ (startsWith(steps.tag_name.outputs.version, 'v0')) || (endsWith(steps.tag_name.outputs.version, '-pre')) || (endsWith(steps.tag_name.outputs.version, '-dev')) }}
